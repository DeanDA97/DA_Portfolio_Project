-- SQL Project - Data Cleaning

-- https://www.kaggle.com/datasets/swaptr/layoffs-2022


SELECT * 
FROM sql_dc.layoffs;


CREATE TABLE sql_dc.layoffs_staging 
LIKE sql_dc.layoffs;

INSERT layoffs_staging 
SELECT * FROM sql_dc.layoffs;

-- 1. Remove Duplicates

SELECT *
FROM sql_dc.layoffs_staging
;

SELECT company, industry, total_laid_off,`date`,
		ROW_NUMBER() OVER (
			PARTITION BY company, industry, total_laid_off,`date`) AS row_num
	FROM 
		sql_dc.layoffs_staging;



SELECT *
FROM (
	SELECT company, industry, total_laid_off,`date`,
		ROW_NUMBER() OVER (
			PARTITION BY company, industry, total_laid_off,`date`
			) AS row_num
	FROM 
		sql_dc.layoffs_staging
) duplicates
WHERE 
	row_num > 1;
    
-- Confirmation of above code working
SELECT *
FROM sql_dc.layoffs_staging
WHERE company = 'Casper'
;

-- Duplicates to be removed

SELECT *
FROM (
	SELECT company, location, industry, total_laid_off,percentage_laid_off,`date`, stage, country, funds_raised_millions,
		ROW_NUMBER() OVER (
			PARTITION BY company, location, industry, total_laid_off,percentage_laid_off,`date`, stage, country, funds_raised_millions
			) AS row_num
	FROM 
		sql_dc.layoffs_staging
) duplicates
WHERE 
	row_num > 1;

-- these are the ones we want to delete where the row number is > 1 or 2or greater essentially

ALTER TABLE sql_dc.layoffs_staging ADD row_num INT;


SELECT *
FROM sql_dc.layoffs_staging
;

CREATE TABLE `sql_dc`.`layoffs_staging2` (
`company` text,
`location`text,
`industry`text,
`total_laid_off` INT,
`percentage_laid_off` text,
`date` text,
`stage`text,
`country` text,
`funds_raised_millions` int,
row_num INT
);

INSERT INTO `sql_dc`.`layoffs_staging2`
(`company`,
`location`,
`industry`,
`total_laid_off`,
`percentage_laid_off`,
`date`,
`stage`,
`country`,
`funds_raised_millions`,
`row_num`)
SELECT `company`,
`location`,
`industry`,
`total_laid_off`,
`percentage_laid_off`,
`date`,
`stage`,
`country`,
`funds_raised_millions`,
		ROW_NUMBER() OVER (
			PARTITION BY company, location, industry, total_laid_off,percentage_laid_off,`date`, stage, country, funds_raised_millions
			) AS row_num
	FROM 
		sql_dc.layoffs_staging;

-- now that we have this we can delete rows were row_num is greater than 2

DELETE FROM sql_dc.layoffs_staging2
WHERE row_num >= 2;

-- test to make sure everything got deleted properly

Select *
FROM sql_dc.layoffs_staging2
WHERE row_num >= 2;




-- 2. Standardize Data

-- Quick clean of the tables

SELECT * 
FROM sql_dc.layoffs_staging2;

SELECT company, Trim(company)
FROM sql_dc.layoffs_staging2;

Update layoffs_staging2
Set company = Trim(company);

-- Checking Industries

SELECT DISTINCT industry
FROM sql_dc.layoffs_staging2
ORDER BY industry;

-- Changing Multiple Crypto titles to 1 column

Select *
From sql_dc.layoffs_staging2
Where industry Like 'Crypto%';

Update layoffs_staging2
SET industry = 'Crypto'
Where industry LIKE 'Crypto%' ;

-- Checking Country

Select distinct country
From Layoffs_staging2
order by 1 ;

-- Cleaning country columns

Select distinct country, Trim(Trailing '.' From country)
From Layoffs_staging2

Update layoffs_staging2
Set Country = Trim(Trailing '.' From country) 
Where country LIKE 'United States%' ;

-- Checking/ Formating date

Select `date`
From layoffs_staging2;

Select `date`,
STR_TO_DATE(`date`, '%d-%b-%Y')
From layoffs_staging2;

Update layoffs_staging2
Set `date` = STR_TO_DATE(`date`, '%d-%b-%Y');

Alter Table layoffs_staging2
Modify COLUMN `date` DATE;


-- Taking on the Nulls/Blanks

Select*
From layoffs_staging2
Where total_laid_off IS NULL
and percentage_laid_off IS NULL;

Update layoffs_staging2
Set industry = NULL
Where industry = '';

Select *
From layoffs_staging2
Where industry IS NULL
OR industry ='';

Select *
From layoffs_staging2
Where company = 'Bally%';

Select *
From layoffs_staging2 t1
Join layoffs_staging2 t2
	ON t1.company = t2.company
    AND t1.location = t2.location
Where (t1.industry IS NULL OR t1.industry = '')
AND t2.industry IS NOT NULL;

Update layoffs_staging2 t1
Join layoffs_staging2 t2
	On t1.company =t2.company
Set t1.industry = t2.industry
Where (t1.industry IS NULL OR t1.industry = '')
AND t2.industry IS NOT NULL;


-- Removing Stuff

Select *
From layoffs_staging2
Where total_laid_off IS NULL
AND percentage_laid_off IS NULL;


Delete
From layoffs_staging2
Where total_laid_off IS NULL
AND percentage_laid_off IS NULL;

Alter Table layoffs_staging2
Drop Column row_num;

Select *
From layoffs_staging2
